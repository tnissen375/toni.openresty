ssl_session_cache shared:SSL:10m;
ssl_session_timeout 1d;
ssl_session_tickets off;
#ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
#ssl_ciphers "ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS:!AES256";
ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers ECDH+AESGCM:ECDH+CHACHA20:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS:!AESCCM;
ssl_prefer_server_ciphers on;

{% if override_nginx_conf_dir is defined %}
ssl_dhparam {{ override_nginx_conf_dir }}/ssl/dhp-4096.pem;
{% else %}
ssl_dhparam {{ nginx_conf_dir }}/ssl/dhp-4096.pem;
{% endif %}

{% if nginx_ssl_stream_config is defined and nginx_ssl_stream_config|bool==false %}
ssl_stapling on;
ssl_stapling_verify on;
# All servers are only reachable through SSL - before havin valid letsencrypt certs we are using selfsigned certificates as default (HSTS gets ignored as long as there is no valid and trusted cert)
# Security can be increased: https://hstspreload.org/ //  Strict-Transport-Security: max-age=63072000; includeSubDomains; preload 
add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

# This has to be set on every server block - all severs are using SSL by default, so its placed here. Nothing sepcial to SSL.
{% if session_store is defined and session_store=="shm" %}
set $session_storage shm;
set $session_shm_store         sessions;  
set $session_shm_uselocking    off;
{% endif %}

{% if session_store is defined and session_store=="redis" %}
set $session_strategy regenerate;
set $session_storage redis;
set $session_redis_prefix                   sessions;
set $session_redis_database                 0;
set $session_redis_connect_timeout          1000; # (in milliseconds)
set $session_redis_send_timeout             1000; # (in milliseconds)
set $session_redis_read_timeout             1000; # (in milliseconds)
#set $session_redis_socket                   unix:///var/run/redis/redis.sock;
set $session_redis_host                     redis;
set $session_redis_port                     6379;
set $session_redis_ssl                      off;
set $session_redis_ssl_verify               off;
set $session_redis_server_name              {{ session_store_redis_server_name }} # for TLS SNI
{% if session_store_redis_password is defined and session_store_redis_password!="" %}
set $session_redis_auth                     {{ session_store_redis_password }};
{% endif %}
set $session_redis_uselocking               off;
set $session_redis_spinlockwait             150;  # (in milliseconds)
set $session_redis_maxlockwait              30;   # (in seconds)
set $session_redis_pool_name                sessions;
set $session_redis_pool_timeout             1000; # (in milliseconds)
set $session_redis_pool_size                10;
set $session_redis_pool_backlog             10;
#set $session_redis_cluster_name             redis-cluster;
#set $session_redis_cluster_dict             sessions;
#set $session_redis_cluster_maxredirections  5;
#set $session_redis_cluster_nodes            '127.0.0.1:30001 127.0.0.1:30002 127.0.0.1:30003 127.0.0.1:30004 127.0.0.1:30005 127.0.0.1:30006';
{% endif %}

set $session_cookie_persistent on;   
set $session_cookie_renew      3600;      # new cookie every hour
set $session_cookie_lifetime   86400;     # lifetime for persistent cookies
set $session_name              {{ openresty_session_name }}; 
set $session_cookie_domain .{{ domain }};
set $session_secret {{ openresty_session_secret }};
#set $session_cookie_samesite off;
{% endif %}